type User @model 
@auth(
    rules: [
      { allow: public, operations: [read]},
      { allow: owner },
      {
        allow: groups
        groups: ["administrator"]
        operations: [read, update, delete]
      },
      { allow: private, operations: [read] }
    ]
  ) 
{
  id: ID!
  handle: String!
  displayName: String
  photoUrl: String
}

type Hikes @model 
@auth(
    rules: [
      { allow: public, operations: [read]},
      { allow: owner },
      {
        allow: groups
        groups: ["administrator"]
        operations: [read, update, delete]
      },
      { allow: private, operations: [read] }
    ]
  ) 
{
  id: ID!
  name: String!
  description: String
  city: String
  state: String
  image: String
  difficulty: Int
  like: Boolean
  mapdata: AWSJSON
  comments: [Comment]
    @connection(
      keyName: "hikeComments"
      fields: ["id"]
    )
}

type Comment
  @model
  @key(
    name: "hikeComments",
    fields: ["hikeId", "content"]
  )
  @auth(
    rules: [
      { allow: owner },
      {
        allow: groups
        groups: ["Moderator"]
        operations: [read, update, delete]
      },
      { allow: private, operations: [read] }
    ]
  ) {
  id: ID!
  hikeId: ID!
  content: String!
  hike: Hikes @connection(fields: ["hikeId"])

}
